<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="FSharpx.Extras" Version="3.1.0" />
    <PackageReference Include="LiteDB" Version="5.0.16" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="7.0.4" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="NSwag.AspNetCore" Version="13.18.2" />
    <PackageReference Include="NSwag.MSBuild" Version="13.18.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
	<PackageReference Include="ElectronNET.API" Version="23.6.1" />
	<PackageReference Include="OCEL" Version="1.3.0" />
	<PackageReference Include="OCEL.CSharp" Version="1.3.0" />
	<PackageReference Include="ProcessGraphLayout" Version="0.0.1-alpha.15" />
  </ItemGroup>
	
  <Target Name="NSwag" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug'">
	<Copy SourceFiles="@(Reference)" DestinationFolder="$(OutDir)References" />
	<Exec Command="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
	<RemoveDir Directories="$(OutDir)References" />
  </Target>

  <ItemGroup>
    <Content Update="package.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Update="Pages\Cases.entry.ts">
      <DependentUpon>Cases.cshtml</DependentUpon>
    </None>
    <None Update="Pages\Cases.rollup.config.js">
      <DependentUpon>Cases.cshtml</DependentUpon>
    </None>
    <None Update="Pages\Statistics.entry.ts">
      <DependentUpon>Statistics.cshtml</DependentUpon>
    </None>
    <None Update="Pages\Statistics.rollup.config.js">
      <DependentUpon>Statistics.cshtml</DependentUpon>
    </None>
    <None Update="Pages\Map.entry.ts">
      <DependentUpon>Map.cshtml</DependentUpon>
    </None>
    <None Update="Pages\Map.rollup.config.js">
      <DependentUpon>Map.cshtml</DependentUpon>
    </None>
    <None Update="Pages\Index.rollup.config.js">
      <DependentUpon>Index.cshtml</DependentUpon>
    </None>
    <None Update="Pages\Index.entry.ts">
      <DependentUpon>Index.cshtml</DependentUpon>
    </None>
    <None Update="Pages\Error.rollup.config.js">
      <DependentUpon>Error.cshtml</DependentUpon>
    </None>
    <None Update="Pages\Error.entry.ts">
      <DependentUpon>Error.cshtml</DependentUpon>
    </None>
    <None Update="Pages\NotFound.rollup.config.js">
      <DependentUpon>NotFound.cshtml</DependentUpon>
    </None>
    <None Update="Pages\NotFound.entry.ts">
      <DependentUpon>NotFound.cshtml</DependentUpon>
    </None>
	<None Update="Pages\Files.rollup.config.js">
	  <DependentUpon>Files.cshtml</DependentUpon>
	</None>
	<None Update="Pages\Files.entry.ts">
	  <DependentUpon>Files.cshtml</DependentUpon>
	</None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="wwwroot\build\" />
    <Folder Include="wwwroot\api\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\pm4net\pm4net\pm4net.fsproj" />
    <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <PreBuildEvent>npm run fe-build-all --color=always</PreBuildEvent>
  </PropertyGroup>
	
  <ItemGroup>
	<Content Update="electron.manifest.json">
	  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	</Content>
  </ItemGroup>

</Project>
