{
  "x-generator": "NSwag v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "My Title",
    "version": "1.0.0"
  },
  "paths": {
    "/api/File/logFileInfos": {
      "get": {
        "tags": [
          "File"
        ],
        "operationId": "File_GetLogFileInfos",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LogFileInfo"
              }
            }
          }
        }
      }
    },
    "/api/File/importAll": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_ImportAll",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/LogFileInfo"
              }
            }
          }
        }
      }
    },
    "/api/File/importLog": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_ImportLog",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "fileName",
            "in": "query",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LogFileInfo"
            }
          }
        }
      }
    },
    "/api/File/exportOcel": {
      "get": {
        "tags": [
          "File"
        ],
        "operationId": "File_ExportOcel",
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "format",
            "in": "query",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Map/getLogInfo": {
      "get": {
        "tags": [
          "Map"
        ],
        "operationId": "Map_GetLogInfo",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LogInfo"
            }
          }
        }
      }
    },
    "/api/Map/discoverOcDfg": {
      "post": {
        "tags": [
          "Map"
        ],
        "operationId": "Map_DiscoverOcDfg",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OcDfgOptions"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DirectedGraphOfNodeOfNodeInfoAndEdgeOfEdgeInfo"
            }
          }
        }
      }
    },
    "/api/Map/getAllNodesInLog": {
      "get": {
        "tags": [
          "Map"
        ],
        "operationId": "Map_GetAllNodesInLog",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LogNode"
              }
            }
          }
        }
      }
    },
    "/api/Map/saveNodeCalculations": {
      "post": {
        "tags": [
          "Map"
        ],
        "operationId": "Map_SaveNodeCalculations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          },
          {
            "name": "calculations",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NodeCalculation"
              }
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Map/computeLayoutWithModel": {
      "post": {
        "tags": [
          "Map"
        ],
        "operationId": "Map_ComputeLayoutWithModel",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          },
          {
            "name": "modelAndOptions",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValueTupleOfDirectedGraphOfNodeOfNodeInfoAndEdgeOfEdgeInfoAndGraphLayoutOptions"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GraphLayout"
            }
          }
        }
      }
    },
    "/api/Map/computeLayout": {
      "post": {
        "tags": [
          "Map"
        ],
        "operationId": "Map_ComputeLayout",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OcDfgLayoutOptions"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GraphLayout"
            }
          }
        }
      }
    },
    "/api/Map/discoverOcDfgAndDot": {
      "post": {
        "tags": [
          "Map"
        ],
        "operationId": "Map_DiscoverOcDfgAndGenerateDot",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "groupByNamespace",
            "in": "query",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OcDfgOptions"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/Map/getTracesForObjectType": {
      "get": {
        "tags": [
          "Map"
        ],
        "operationId": "Map_GetTracesForObjectType",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "objectType",
            "in": "query",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValueTupleOfOcelObjectAndIEnumerableOfValueTupleOfStringAndOcelEvent"
              }
            }
          }
        }
      }
    },
    "/api/Map/namespaceTree": {
      "get": {
        "tags": [
          "Map"
        ],
        "operationId": "Map_GetNamespaceTree",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "projectName",
            "in": "query",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListTreeOfString"
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/Project/create": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_Create",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "logDir",
            "in": "query",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Project/delete": {
      "delete": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "LogFileInfo": {
      "type": "object",
      "required": [
        "id",
        "noOfImportedEvents",
        "noOfImportedObjects",
        "fileSize"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "noOfImportedEvents": {
          "type": "integer",
          "format": "int32"
        },
        "noOfImportedObjects": {
          "type": "integer",
          "format": "int32"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "lastImported": {
          "type": "string",
          "format": "date-time"
        },
        "lastChanged": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LogInfo": {
      "type": "object",
      "required": [
        "objectTypes",
        "firstEventTimestamp",
        "lastEventTimestamp"
      ],
      "properties": {
        "objectTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "firstEventTimestamp": {
          "type": "string"
        },
        "lastEventTimestamp": {
          "type": "string"
        }
      }
    },
    "DirectedGraphOfNodeOfNodeInfoAndEdgeOfEdgeInfo": {
      "type": "object",
      "description": "Directed graph with edge information.",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeOfNodeInfo"
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TupleOfNodeOfNodeInfoAndNodeOfNodeInfoAndEdgeOfEdgeInfo"
          }
        }
      }
    },
    "NodeOfNodeInfo": {
      "type": "object",
      "description": "A node type that can be a regular event node or a start/end node for a specific type.",
      "x-abstract": true
    },
    "TupleOfNodeOfNodeInfoAndNodeOfNodeInfoAndEdgeOfEdgeInfo": {
      "type": "object",
      "required": [
        "item1",
        "item2",
        "item3"
      ],
      "properties": {
        "item1": {
          "$ref": "#/definitions/NodeOfNodeInfo"
        },
        "item2": {
          "$ref": "#/definitions/NodeOfNodeInfo"
        },
        "item3": {
          "$ref": "#/definitions/EdgeOfEdgeInfo"
        }
      }
    },
    "EdgeOfEdgeInfo": {
      "type": "object",
      "description": "An edge is associated with a weight/frequency, and optionally a type, as well as any other arbitrary information.",
      "required": [
        "weight"
      ],
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/FSharpOptionOfString"
        },
        "info": {
          "$ref": "#/definitions/FSharpOptionOfEdgeInfo"
        }
      }
    },
    "FSharpOptionOfString": {
      "type": "object"
    },
    "FSharpOptionOfEdgeInfo": {
      "type": "object"
    },
    "OcDfgOptions": {
      "type": "object",
      "required": [
        "minimumEvents",
        "minimumOccurrence",
        "minimumSuccessions",
        "keepCases",
        "includedTypes"
      ],
      "properties": {
        "minimumEvents": {
          "type": "integer",
          "format": "int32"
        },
        "minimumOccurrence": {
          "type": "integer",
          "format": "int32"
        },
        "minimumSuccessions": {
          "type": "integer",
          "format": "int32"
        },
        "dateFrom": {
          "type": "string"
        },
        "dateTo": {
          "type": "string"
        },
        "keepCases": {
          "$ref": "#/definitions/KeepCases"
        },
        "includedTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "KeepCases": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "ContainedInTimeFrame",
        "IntersectingTimeFrame",
        "StartedInTimeFrame",
        "CompletedInTimeFrame",
        "TrimToTimeFrame"
      ],
      "enum": [
        "contained",
        "intersecting",
        "started",
        "completed",
        "trim"
      ]
    },
    "LogNode": {
      "type": "object",
      "required": [
        "id",
        "displayName",
        "nodeType"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "nodeType": {
          "$ref": "#/definitions/NodeType"
        }
      }
    },
    "NodeType": {
      "type": "object",
      "discriminator": "discriminator",
      "x-abstract": true,
      "required": [
        "discriminator"
      ],
      "properties": {
        "discriminator": {
          "type": "string"
        }
      }
    },
    "Event": {
      "allOf": [
        {
          "$ref": "#/definitions/NodeType"
        },
        {
          "type": "object"
        }
      ]
    },
    "Start": {
      "allOf": [
        {
          "$ref": "#/definitions/NodeType"
        },
        {
          "type": "object",
          "required": [
            "objectType"
          ],
          "properties": {
            "objectType": {
              "type": "string"
            }
          }
        }
      ]
    },
    "End": {
      "allOf": [
        {
          "$ref": "#/definitions/NodeType"
        },
        {
          "type": "object",
          "required": [
            "objectType"
          ],
          "properties": {
            "objectType": {
              "type": "string"
            }
          }
        }
      ]
    },
    "NodeCalculation": {
      "type": "object",
      "required": [
        "nodeId",
        "textWrap"
      ],
      "properties": {
        "nodeId": {
          "type": "string"
        },
        "textWrap": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "$ref": "#/definitions/Size"
        },
        "nodeType": {
          "$ref": "#/definitions/NodeType"
        }
      }
    },
    "Size": {
      "type": "object",
      "description": "The size of a node.",
      "required": [
        "width",
        "height"
      ],
      "properties": {
        "width": {
          "type": "number",
          "format": "float"
        },
        "height": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "GraphLayout": {
      "type": "object",
      "required": [
        "nodes",
        "edges"
      ],
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Node"
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Edge"
          }
        }
      }
    },
    "Node": {
      "type": "object",
      "required": [
        "id",
        "text",
        "nodeType",
        "position",
        "size",
        "rank"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nodeType": {
          "$ref": "#/definitions/NodeType"
        },
        "position": {
          "$ref": "#/definitions/Coordinate"
        },
        "size": {
          "$ref": "#/definitions/Size"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "nodeInfo": {
          "$ref": "#/definitions/NodeInfo"
        }
      }
    },
    "Coordinate": {
      "type": "object",
      "description": "A point in a coordinate system.",
      "required": [
        "x",
        "y"
      ],
      "properties": {
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "NodeInfo": {
      "type": "object",
      "required": [
        "frequency"
      ],
      "properties": {
        "frequency": {
          "type": "integer",
          "format": "int32"
        },
        "namespace": {
          "type": "string"
        },
        "logLevel": {
          "$ref": "#/definitions/LogLevel"
        }
      }
    },
    "LogLevel": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Verbose",
        "Debug",
        "Information",
        "Warning",
        "Error",
        "Fatal",
        "Unknown"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "Edge": {
      "type": "object",
      "required": [
        "sourceId",
        "targetId",
        "waypoints",
        "downwards",
        "totalWeight",
        "typeInfos"
      ],
      "properties": {
        "sourceId": {
          "type": "string"
        },
        "targetId": {
          "type": "string"
        },
        "waypoints": {
          "$ref": "#/definitions/Waypoints"
        },
        "downwards": {
          "type": "boolean"
        },
        "totalWeight": {
          "type": "integer",
          "format": "int32"
        },
        "typeInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EdgeTypeInfoOfEdgeInfo"
          }
        }
      }
    },
    "Waypoints": {
      "type": "object",
      "required": [
        "coordinates",
        "catmullRom",
        "cubicBezier",
        "quadraticBezier"
      ],
      "properties": {
        "coordinates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coordinate"
          }
        },
        "catmullRom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coordinate"
          }
        },
        "cubicBezier": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TupleOfCoordinateAndCoordinateAndCoordinateAndCoordinate"
          }
        },
        "quadraticBezier": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TupleOfCoordinateAndCoordinateAndCoordinate"
          }
        }
      }
    },
    "TupleOfCoordinateAndCoordinateAndCoordinateAndCoordinate": {
      "type": "object",
      "required": [
        "item1",
        "item2",
        "item3",
        "item4"
      ],
      "properties": {
        "item1": {
          "$ref": "#/definitions/Coordinate"
        },
        "item2": {
          "$ref": "#/definitions/Coordinate"
        },
        "item3": {
          "$ref": "#/definitions/Coordinate"
        },
        "item4": {
          "$ref": "#/definitions/Coordinate"
        }
      }
    },
    "TupleOfCoordinateAndCoordinateAndCoordinate": {
      "type": "object",
      "required": [
        "item1",
        "item2",
        "item3"
      ],
      "properties": {
        "item1": {
          "$ref": "#/definitions/Coordinate"
        },
        "item2": {
          "$ref": "#/definitions/Coordinate"
        },
        "item3": {
          "$ref": "#/definitions/Coordinate"
        }
      }
    },
    "EdgeTypeInfoOfEdgeInfo": {
      "type": "object",
      "required": [
        "weight"
      ],
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "info": {
          "$ref": "#/definitions/EdgeInfo"
        }
      }
    },
    "EdgeInfo": {
      "type": "object",
      "properties": {
        "durations": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "duration"
          }
        }
      }
    },
    "ValueTupleOfDirectedGraphOfNodeOfNodeInfoAndEdgeOfEdgeInfoAndGraphLayoutOptions": {
      "type": "object",
      "required": [
        "item1",
        "item2"
      ],
      "properties": {
        "item1": {
          "$ref": "#/definitions/DirectedGraphOfNodeOfNodeInfoAndEdgeOfEdgeInfo"
        },
        "item2": {
          "$ref": "#/definitions/GraphLayoutOptions"
        }
      }
    },
    "GraphLayoutOptions": {
      "type": "object",
      "required": [
        "mergeEdgesOfSameType",
        "fixUnforeseenEdges",
        "nodeSeparation",
        "rankSeparation",
        "edgeSeparation",
        "tension"
      ],
      "properties": {
        "mergeEdgesOfSameType": {
          "type": "boolean"
        },
        "fixUnforeseenEdges": {
          "type": "boolean"
        },
        "nodeSeparation": {
          "type": "number",
          "format": "float"
        },
        "rankSeparation": {
          "type": "number",
          "format": "float"
        },
        "edgeSeparation": {
          "type": "number",
          "format": "float"
        },
        "tension": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "OcDfgLayoutOptions": {
      "type": "object",
      "required": [
        "ocDfgOptions",
        "layoutOptions"
      ],
      "properties": {
        "ocDfgOptions": {
          "$ref": "#/definitions/OcDfgOptions"
        },
        "layoutOptions": {
          "$ref": "#/definitions/GraphLayoutOptions"
        }
      }
    },
    "ValueTupleOfOcelObjectAndIEnumerableOfValueTupleOfStringAndOcelEvent": {
      "type": "object",
      "required": [
        "item1",
        "item2"
      ],
      "properties": {
        "item1": {
          "$ref": "#/definitions/OcelObject"
        },
        "item2": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueTupleOfStringAndOcelEvent"
          }
        }
      }
    },
    "OcelObject": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "ovMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/OcelValue"
          }
        }
      }
    },
    "OcelValue": {
      "type": "object",
      "discriminator": "discriminator",
      "x-abstract": true,
      "required": [
        "discriminator"
      ],
      "properties": {
        "discriminator": {
          "type": "string"
        }
      }
    },
    "OcelString": {
      "allOf": [
        {
          "$ref": "#/definitions/OcelValue"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
    },
    "OcelTimestamp": {
      "allOf": [
        {
          "$ref": "#/definitions/OcelValue"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      ]
    },
    "OcelInteger": {
      "allOf": [
        {
          "$ref": "#/definitions/OcelValue"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "OcelFloat": {
      "allOf": [
        {
          "$ref": "#/definitions/OcelValue"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "number",
              "format": "double"
            }
          }
        }
      ]
    },
    "OcelBoolean": {
      "allOf": [
        {
          "$ref": "#/definitions/OcelValue"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "OcelList": {
      "allOf": [
        {
          "$ref": "#/definitions/OcelValue"
        },
        {
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OcelValue"
              }
            }
          }
        }
      ]
    },
    "OcelMap": {
      "allOf": [
        {
          "$ref": "#/definitions/OcelValue"
        },
        {
          "type": "object",
          "properties": {
            "values": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/OcelValue"
              }
            }
          }
        }
      ]
    },
    "ValueTupleOfStringAndOcelEvent": {
      "type": "object",
      "required": [
        "item1",
        "item2"
      ],
      "properties": {
        "item1": {
          "type": "string"
        },
        "item2": {
          "$ref": "#/definitions/OcelEvent"
        }
      }
    },
    "OcelEvent": {
      "type": "object",
      "required": [
        "activity",
        "timestamp",
        "oMap",
        "vMap"
      ],
      "properties": {
        "activity": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "oMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/OcelObject"
          }
        },
        "vMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/OcelValue"
          }
        }
      }
    },
    "ListTreeOfString": {
      "type": "object"
    }
  }
}